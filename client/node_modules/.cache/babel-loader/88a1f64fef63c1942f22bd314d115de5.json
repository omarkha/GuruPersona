{"ast":null,"code":"var _jsxFileName = \"/Users/admin/ga_seir/projects/projects/personalitysite/client/src/components/ProgressBar.js\";\nimport React from \"react\";\nimport RatingQuestion from \"./RatingQuestion\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProgressBar = props => {\n  let colorChanger1 = 0;\n  let colorChanger2 = 255;\n  let widthChanger = 0;\n  let percentAchieved = 0;\n  colorChanger1 = props.currentScore * 255 / props.topScore;\n  colorChanger2 = 255 - props.currentScore * 255 / props.topScore;\n  widthChanger = props.currentScore * 100 / props.topScore;\n  percentAchieved = Math.ceil(props.currentScore * 100 / props.topScore);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"progress-bar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress-mover\",\n        style: `background-color: rgb(${colorChanger2},${colorChanger1},40); width:\n          ${widthChanger} + \"%\"; `\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        style: `${percentAchieved} + %`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n\n_c = ProgressBar;\nexport default ProgressBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProgressBar\");","map":{"version":3,"names":["React","RatingQuestion","ProgressBar","props","colorChanger1","colorChanger2","widthChanger","percentAchieved","currentScore","topScore","Math","ceil"],"sources":["/Users/admin/ga_seir/projects/projects/personalitysite/client/src/components/ProgressBar.js"],"sourcesContent":["import React from \"react\";\nimport RatingQuestion from \"./RatingQuestion\";\n\nconst ProgressBar = (props) => {\n  let colorChanger1 = 0;\n  let colorChanger2 = 255;\n  let widthChanger = 0;\n  let percentAchieved = 0;\n\n  colorChanger1 = (props.currentScore * 255) / props.topScore;\n  colorChanger2 = 255 - (props.currentScore * 255) / props.topScore;\n\n  widthChanger = (props.currentScore * 100) / props.topScore;\n  percentAchieved = Math.ceil((props.currentScore * 100) / props.topScore);\n\n  return (\n    <div>\n      <div className=\"progress-bar\">\n        <div\n          className=\"progress-mover\"\n          style={`background-color: rgb(${colorChanger2},${colorChanger1},40); width:\n          ${widthChanger} + \"%\"; `}\n        ></div>\n        <h5 style={`${percentAchieved} + %`}></h5>\n      </div>\n    </div>\n  );\n};\n\nexport default ProgressBar;\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;EAC7B,IAAIC,aAAa,GAAG,CAApB;EACA,IAAIC,aAAa,GAAG,GAApB;EACA,IAAIC,YAAY,GAAG,CAAnB;EACA,IAAIC,eAAe,GAAG,CAAtB;EAEAH,aAAa,GAAID,KAAK,CAACK,YAAN,GAAqB,GAAtB,GAA6BL,KAAK,CAACM,QAAnD;EACAJ,aAAa,GAAG,MAAOF,KAAK,CAACK,YAAN,GAAqB,GAAtB,GAA6BL,KAAK,CAACM,QAAzD;EAEAH,YAAY,GAAIH,KAAK,CAACK,YAAN,GAAqB,GAAtB,GAA6BL,KAAK,CAACM,QAAlD;EACAF,eAAe,GAAGG,IAAI,CAACC,IAAL,CAAWR,KAAK,CAACK,YAAN,GAAqB,GAAtB,GAA6BL,KAAK,CAACM,QAA7C,CAAlB;EAEA,oBACE;IAAA,uBACE;MAAK,SAAS,EAAC,cAAf;MAAA,wBACE;QACE,SAAS,EAAC,gBADZ;QAEE,KAAK,EAAG,yBAAwBJ,aAAc,IAAGD,aAAc;AACzE,YAAYE,YAAa;MAHjB;QAAA;QAAA;QAAA;MAAA,QADF,eAME;QAAI,KAAK,EAAG,GAAEC,eAAgB;MAA9B;QAAA;QAAA;QAAA;MAAA,QANF;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAYD,CAxBD;;KAAML,W;AA0BN,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}